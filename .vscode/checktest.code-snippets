{
    // Place your sig workspace snippets here. Each snippet is defined under a snippet name and has a scope, prefix, body and
    // description. Add comma separated ids of the languages where the snippet is applicable in the scope field. If scope
    // is left empty or omitted, the snippet gets applied to all languages. The prefix is what is
    // used to trigger the snippet and the body will be expanded and inserted. Possible variables are:
    // $1, $2 for tab stops, $0 for the final cursor position, and ${1:label}, ${2:another} for placeholders.
    // Placeholders with the same ids are connected.
    // Example:
    "Create suite for Comparator": {
        "scope": "typescript",
        "prefix": "checktest",
        "body": [
            "describe('$1', () => {",
            "\tit('should ', () => {",
            "\t\texpect({",
            "\t\t\tv1: `",
            "\t\t\t`,",
            "\t\t\tv2: `",
            "\t\t\t`,",
            "\t\tcode: '$1',",
            "\t\t} as ComparatorTestPayload).toFailComparison(``)",
            "\t})",
            "\tit('should not ', () => {",
            "\t\texpect({",
            "\t\t\tv1: `",
            "\t\t\t`,",
            "\t\t\tv2: `",
            "\t\t\t`,",
            "\t\tcode: '$1',",
            "\t\t} as ComparatorTestPayload).toPassComparison()",
            "\t})",
            "})"
        ],
        "description": "Create suite for Comparator"
    },
    "Create Comparator": {
        "scope": "typescript",
        "prefix": "checker",
        "body": [
            "export function $1({",
            "\tbefore,",
            "\tafter,",
            "}: Comparator.CompareOpt<Signatures.SignatureType>): Comparator.Change<'$1'> {",
            "\tif (after && after.memberType === 'class' && before.memberType === 'class') {",
            "\t}",
            "\treturn {",
            "\t\tinfo: CHANGE_REGISTRY.no_change,",
            "\t\tsignatures: { before, after },",
            "\t}",
            "}"
        ],
        "description": "Create Comparator"
    }
}
